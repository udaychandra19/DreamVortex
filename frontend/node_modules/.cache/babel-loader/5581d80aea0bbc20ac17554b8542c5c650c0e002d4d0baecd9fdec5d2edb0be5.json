{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G Uday Chandra\\\\PycharmProjects\\\\1\\\\java programs\\\\React\\\\deepdream\\\\frontend\\\\src\\\\Components\\\\Dalle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dalle(props) {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    document.title = \"Generator - DreamVortex\";\n    document.body.style.backgroundColor = props.mode === \"light\" ? \"#f2f2f2\" : \"#333\";\n  }, [props.mode]);\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null);\n    setImage(null);\n    try {\n      const response = await fetch('http://localhost:5500/imageconv', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: inputText\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.image) {\n        setImage(data.image);\n      } else {\n        setError(data.error);\n        console.log(data.error);\n      }\n    } catch (error) {\n      setError('Fetch error:', error.message);\n      console.error('Fetch error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      marginTop: \"70px\",\n      color: props.mode === \"light\" ? \"#333\" : \"#fdf6e4\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"DreamVortex Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      style: {\n        fontSize: '1.2rem',\n        color: props.mode === \"light\" ? \"#555\" : \"#ccc\",\n        marginTop: '20px'\n      },\n      children: \"Welcome to the Dalle Text Input page! Enter some text in the input field below and click the submit button to perform actions with the text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"textInput\",\n          style: {\n            fontSize: '1.2rem',\n            color: props.mode === \"light\" ? \"#555\" : \"#fdf6e4\",\n            marginTop: '20px',\n            marginBottom: \"10px\"\n          },\n          children: \"Enter Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"textInput\",\n          value: inputText,\n          onChange: handleInputChange,\n          placeholder: \"Type your text here\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"15px\"\n          },\n          className: \"btn btn-success\",\n          disabled: loading,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Generated\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Dalle, \"fmvwd7bkSuVvRbzat5QYCPmVYmU=\");\n_c = Dalle;\nvar _c;\n$RefreshReg$(_c, \"Dalle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dalle","props","_s","inputText","setInputText","loading","setLoading","error","setError","image","setImage","document","title","body","style","backgroundColor","mode","handleInputChange","event","target","value","handleSubmit","preventDefault","response","fetch","method","headers","JSON","stringify","text","ok","Error","status","data","json","console","log","message","className","padding","maxWidth","marginTop","color","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","onSubmit","htmlFor","marginBottom","type","id","onChange","placeholder","disabled","src","alt","height","_c","$RefreshReg$"],"sources":["C:/Users/G Uday Chandra/PycharmProjects/1/java programs/React/deepdream/frontend/src/Components/Dalle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Dalle(props) {\r\n    const [inputText, setInputText] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        document.title = \"Generator - DreamVortex\";\r\n        document.body.style.backgroundColor = props.mode === \"light\" ? \"#f2f2f2\" : \"#333\";\r\n    }, [props.mode]);\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputText(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setError(null);\r\n        setImage(null);\r\n        try {\r\n            const response = await fetch('http://localhost:5500/imageconv', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ text: inputText })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.image) {\r\n                setImage(data.image);\r\n            } else {\r\n                setError(data.error);\r\n                console.log(data.error);\r\n            }\r\n        } catch (error) {\r\n            setError('Fetch error:', error.message);\r\n            console.error('Fetch error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\" style={{ padding: '20px', maxWidth: '600px', marginTop: \"70px\", color: props.mode === \"light\" ? \"#333\" : \"#fdf6e4\" }}>\r\n            <h1 className='text-center'>DreamVortex Image Generator</h1>\r\n            <p className='text-center' style={{ fontSize: '1.2rem', color: props.mode === \"light\" ? \"#555\" : \"#ccc\", marginTop: '20px' }}>\r\n                Welcome to the Dalle Text Input page! Enter some text in the input field below and click the submit button\r\n                to perform actions with the text.\r\n            </p>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group text-center\">\r\n                    <label htmlFor=\"textInput\" style={{ fontSize: '1.2rem', color: props.mode === \"light\" ? \"#555\" : \"#fdf6e4\", marginTop: '20px', marginBottom: \"10px\" }}>Enter Text:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"textInput\"\r\n                        value={inputText}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Type your text here\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <button type=\"submit\" style={{ marginTop: \"15px\" }} className=\"btn btn-success\" disabled={loading}>Submit</button>\r\n                </div>\r\n                {loading && <p>Loading...</p>}\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            </form>\r\n            {image && (\r\n                <div className=\"text-center\" style={{ marginTop: '20px' }}>\r\n                    <h2>Generated Image:</h2>\r\n                    <img src={image} alt=\"Generated\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}