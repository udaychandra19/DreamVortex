{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G Uday Chandra\\\\PycharmProjects\\\\1\\\\java programs\\\\React\\\\deepdream\\\\frontend\\\\src\\\\Components\\\\Dream.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// export default function Dream() {\n//     const [Image, setImage] = useState(null);\n//     const [preview, setpreview] = useState(null);\n//     const [final, setFinal] = useState(null);\n//     const [spin, setSpin] = useState(false);\n//     const [alert, setAlert] = useState(\"\");\n//     const fileInputRef = useRef(null);\n//     document.title = \"Creativity - DreamVortex\";\n\n//     const ImageUpload = async () => {\n//         try {\n//             setSpin(true);\n//             if (!Image) {\n//                 console.log('Please Upload the Image');\n//                 setAlert(\"Please Upload the Image\");\n//                 setTimeout(() => {\n//                     setAlert(\"\");\n//                 }, 2000);\n//                 setSpin(false);\n//                 return;\n//             }\n//             const formData = new FormData();\n//             formData.append('file', Image);\n\n//             const response = await fetch('http://localhost:5500/dd', {\n//                 method: 'POST',\n//                 body: formData\n//             });\n\n//             const result = await response.json();\n\n//             if (response.ok) {\n//                 console.log('Images uploaded:', result.message);\n//                 setImage(null);\n//                 setFinal(result.imageUrl);\n//                 setSpin(false);\n//                 fileInputRef.current.value = '';\n//                 setpreview(null);\n//             } else {\n//                 setSpin(false);\n//                 console.error('Upload failed:', result.error);\n//             }\n//         } catch (error) {\n//             setSpin(false);\n//             console.error('Error:', error);\n//         }\n//     };\n\n//     const handleImageUpload = (event) => {\n//         const file = event.target.files[0];\n//         setImage(file);\n//         if (file) {\n//             const objectUrl = URL.createObjectURL(file);\n//             setpreview(objectUrl);\n//         } else {\n//             setpreview(null);\n//         }\n//     };\n\n//     const handleImageDeload = () => {\n//         setImage(null);\n//         setSpin(false);\n//         setpreview(null);\n//         fileInputRef.current.value = '';\n//     };\n\n//     const handleRemove = () => {\n//         setFinal(null);\n//     };\n\n//     const handleDownload = async () => {\n//         if (final) {\n//             try {\n//                 const response = await fetch(`http://localhost:5500${final}`);\n//                 const blob = await response.blob();\n\n//                 const downloadLink = document.createElement('a');\n//                 downloadLink.href = window.URL.createObjectURL(blob);\n//                 downloadLink.download = 'Styled_Image.jpg';\n//                 downloadLink.click();\n//             } catch (error) {\n//                 console.error('Download error:', error);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div className=\"container\" style={{ marginTop: \"80px\" }}>\n//             {alert && <div className=\"alert alert-danger text-center\" role=\"alert\" style={{ height: \"50px\", backgroundColor: \"#f8d7da\", color: \"#721c24\", border: \"1px solid #f5c6cb\", borderRadius: \"5px\" }}>{alert}</div>}\n//             <h2 className=\"text-center\">Dreamy Creations through Deep Dream Alchemy</h2>\n//             <p className=\"text-center\" style={{ fontSize: '1.2rem', color: '#555', marginTop: '15px' }}>Upload two images below to start your dream journey!</p>\n//             <div className=\"d-flex justify-content-center\">\n//                 <div className=\"custom-file text-center\" style={{ marginRight: \"10px\" }}>\n//                     <label htmlFor=\"ContentImage\" style={{ fontSize: '18px', fontWeight: 'bold', color: '#333', display: 'block', marginBottom: \"10px\", marginRight: \"20px\" }}>ðŸ’¤ Dreaming Image:</label>\n//                     <input\n//                         type=\"file\" onChange={handleImageUpload} style={{ color: \"blue\" }} ref={fileInputRef} accept='image/*'\n//                         className=\"form-control\"\n//                     />\n//                     {\n//                         preview && (\n//                             <div className=\"mt-2 text-center\">\n//                                 <img src={preview} alt=\"Preview\" className=\"img-thumbnail\" style={{ width: '175px', height: \"175px\", marginTop: \"10px\" }} />\n//                             </div>\n//                         )\n//                     }\n//                     <div style={{ justifyContent: \"space-evenly\", display: \"flex\" }}>\n//                         {preview && <button className=\"btn btn-danger\" onClick={handleImageDeload} style={{ marginTop: \"15px\" }}>Delete</button>}\n//                         {!spin && !final && <button className=\"btn btn-success\" onClick={ImageUpload} style={{ marginTop: \"15px\" }} >Upload</button>}\n//                     </div>\n//                     {!alert && spin && <div className=\"spinner-border text-success text-center\" style={{ marginTop: \"20px\" }} role=\"status\"></div>}\n//                 </div >\n//             </div >\n//             {\n//                 final && (\n//                     <div className='text-center'>\n//                         <div className=\"text-center mt-4\">\n//                             <h3>Stylized Image</h3>\n//                             <img src={`http://localhost:5500${final}`} alt=\"Stylized\" className=\"img-thumbnail\" style={{ width: '300px' }} />\n//                         </div>\n//                         <button className=\"btn btn-success\" style={{ marginTop: \"15px\" }} onClick={handleDownload}>Download</button>\n//                         <button className=\"btn btn-danger\" style={{ marginTop: \"15px\", marginLeft: \"7px\" }} onClick={handleRemove}>Close</button>\n//                     </div>\n//                 )\n//             }\n//         </div >\n//     );\n// }\n\nimport React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dream() {\n  _s();\n  const [Image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [final, setFinal] = useState(null);\n  const [spin, setSpin] = useState(false);\n  const [alert, setAlert] = useState(\"\");\n  const fileInputRef = useRef(null);\n  document.title = \"Creativity - DreamVortex\";\n  const ImageUpload = async () => {\n    try {\n      setSpin(true);\n      if (!Image) {\n        setAlert(\"Please Upload the Image\");\n        setTimeout(() => setAlert(\"\"), 2000);\n        setSpin(false);\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', Image);\n      const response = await fetch('http://localhost:5500/dd', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setImage(null);\n        setFinal(result.imageUrl);\n        setSpin(false);\n        fileInputRef.current.value = '';\n        setPreview(null);\n      } else {\n        setSpin(false);\n        console.error('Upload failed:', result.error);\n      }\n    } catch (error) {\n      setSpin(false);\n      console.error('Error:', error);\n    }\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setImage(file);\n    if (file) {\n      const objectUrl = URL.createObjectURL(file);\n      setPreview(objectUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n  const handleImageDeload = () => {\n    setImage(null);\n    setSpin(false);\n    setPreview(null);\n    fileInputRef.current.value = '';\n  };\n  const handleRemove = () => {\n    setFinal(null);\n  };\n  const handleDownload = async () => {\n    if (final) {\n      try {\n        const response = await fetch(`http://localhost:5500${final}`);\n        const blob = await response.blob();\n        const downloadLink = document.createElement('a');\n        downloadLink.href = window.URL.createObjectURL(blob);\n        downloadLink.download = 'Styled_Image.jpg';\n        downloadLink.click();\n      } catch (error) {\n        console.error('Download error:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moving-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [alert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger text-center\",\n        children: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Dreamy Creations through Deep Dream Alchemy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Upload an image below to start your dream journey!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ContentImage\",\n          className: \"form-label\",\n          children: \"\\uD83D\\uDCA4 Dreaming Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageUpload,\n          ref: fileInputRef,\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview,\n            alt: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mt-2\",\n            onClick: handleImageDeload,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), !spin && !final && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mt-2\",\n          onClick: ImageUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 41\n        }, this), !alert && spin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-success mt-2\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), final && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Stylized Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5500${final}`,\n          alt: \"Stylized\",\n          className: \"stylized-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mt-2\",\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-2 ml-2\",\n          onClick: handleRemove,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n}\n_s(Dream, \"lkUH9KfwucvIpBgrAJy7ZOLVtTE=\");\n_c = Dream;\nvar _c;\n$RefreshReg$(_c, \"Dream\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Dream","_s","Image","setImage","preview","setPreview","final","setFinal","spin","setSpin","alert","setAlert","fileInputRef","document","title","ImageUpload","setTimeout","formData","FormData","append","response","fetch","method","body","result","json","ok","imageUrl","current","value","console","error","handleImageUpload","event","file","target","files","objectUrl","URL","createObjectURL","handleImageDeload","handleRemove","handleDownload","blob","downloadLink","createElement","href","window","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","ref","accept","src","alt","onClick","role","_c","$RefreshReg$"],"sources":["C:/Users/G Uday Chandra/PycharmProjects/1/java programs/React/deepdream/frontend/src/Components/Dream.js"],"sourcesContent":["// import React, { useState, useRef } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// export default function Dream() {\r\n//     const [Image, setImage] = useState(null);\r\n//     const [preview, setpreview] = useState(null);\r\n//     const [final, setFinal] = useState(null);\r\n//     const [spin, setSpin] = useState(false);\r\n//     const [alert, setAlert] = useState(\"\");\r\n//     const fileInputRef = useRef(null);\r\n//     document.title = \"Creativity - DreamVortex\";\r\n\r\n//     const ImageUpload = async () => {\r\n//         try {\r\n//             setSpin(true);\r\n//             if (!Image) {\r\n//                 console.log('Please Upload the Image');\r\n//                 setAlert(\"Please Upload the Image\");\r\n//                 setTimeout(() => {\r\n//                     setAlert(\"\");\r\n//                 }, 2000);\r\n//                 setSpin(false);\r\n//                 return;\r\n//             }\r\n//             const formData = new FormData();\r\n//             formData.append('file', Image);\r\n\r\n//             const response = await fetch('http://localhost:5500/dd', {\r\n//                 method: 'POST',\r\n//                 body: formData\r\n//             });\r\n\r\n//             const result = await response.json();\r\n\r\n//             if (response.ok) {\r\n//                 console.log('Images uploaded:', result.message);\r\n//                 setImage(null);\r\n//                 setFinal(result.imageUrl);\r\n//                 setSpin(false);\r\n//                 fileInputRef.current.value = '';\r\n//                 setpreview(null);\r\n//             } else {\r\n//                 setSpin(false);\r\n//                 console.error('Upload failed:', result.error);\r\n//             }\r\n//         } catch (error) {\r\n//             setSpin(false);\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleImageUpload = (event) => {\r\n//         const file = event.target.files[0];\r\n//         setImage(file);\r\n//         if (file) {\r\n//             const objectUrl = URL.createObjectURL(file);\r\n//             setpreview(objectUrl);\r\n//         } else {\r\n//             setpreview(null);\r\n//         }\r\n//     };\r\n\r\n//     const handleImageDeload = () => {\r\n//         setImage(null);\r\n//         setSpin(false);\r\n//         setpreview(null);\r\n//         fileInputRef.current.value = '';\r\n//     };\r\n\r\n//     const handleRemove = () => {\r\n//         setFinal(null);\r\n//     };\r\n\r\n//     const handleDownload = async () => {\r\n//         if (final) {\r\n//             try {\r\n//                 const response = await fetch(`http://localhost:5500${final}`);\r\n//                 const blob = await response.blob();\r\n\r\n//                 const downloadLink = document.createElement('a');\r\n//                 downloadLink.href = window.URL.createObjectURL(blob);\r\n//                 downloadLink.download = 'Styled_Image.jpg';\r\n//                 downloadLink.click();\r\n//             } catch (error) {\r\n//                 console.error('Download error:', error);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\" style={{ marginTop: \"80px\" }}>\r\n//             {alert && <div className=\"alert alert-danger text-center\" role=\"alert\" style={{ height: \"50px\", backgroundColor: \"#f8d7da\", color: \"#721c24\", border: \"1px solid #f5c6cb\", borderRadius: \"5px\" }}>{alert}</div>}\r\n//             <h2 className=\"text-center\">Dreamy Creations through Deep Dream Alchemy</h2>\r\n//             <p className=\"text-center\" style={{ fontSize: '1.2rem', color: '#555', marginTop: '15px' }}>Upload two images below to start your dream journey!</p>\r\n//             <div className=\"d-flex justify-content-center\">\r\n//                 <div className=\"custom-file text-center\" style={{ marginRight: \"10px\" }}>\r\n//                     <label htmlFor=\"ContentImage\" style={{ fontSize: '18px', fontWeight: 'bold', color: '#333', display: 'block', marginBottom: \"10px\", marginRight: \"20px\" }}>ðŸ’¤ Dreaming Image:</label>\r\n//                     <input\r\n//                         type=\"file\" onChange={handleImageUpload} style={{ color: \"blue\" }} ref={fileInputRef} accept='image/*'\r\n//                         className=\"form-control\"\r\n//                     />\r\n//                     {\r\n//                         preview && (\r\n//                             <div className=\"mt-2 text-center\">\r\n//                                 <img src={preview} alt=\"Preview\" className=\"img-thumbnail\" style={{ width: '175px', height: \"175px\", marginTop: \"10px\" }} />\r\n//                             </div>\r\n//                         )\r\n//                     }\r\n//                     <div style={{ justifyContent: \"space-evenly\", display: \"flex\" }}>\r\n//                         {preview && <button className=\"btn btn-danger\" onClick={handleImageDeload} style={{ marginTop: \"15px\" }}>Delete</button>}\r\n//                         {!spin && !final && <button className=\"btn btn-success\" onClick={ImageUpload} style={{ marginTop: \"15px\" }} >Upload</button>}\r\n//                     </div>\r\n//                     {!alert && spin && <div className=\"spinner-border text-success text-center\" style={{ marginTop: \"20px\" }} role=\"status\"></div>}\r\n//                 </div >\r\n//             </div >\r\n//             {\r\n//                 final && (\r\n//                     <div className='text-center'>\r\n//                         <div className=\"text-center mt-4\">\r\n//                             <h3>Stylized Image</h3>\r\n//                             <img src={`http://localhost:5500${final}`} alt=\"Stylized\" className=\"img-thumbnail\" style={{ width: '300px' }} />\r\n//                         </div>\r\n//                         <button className=\"btn btn-success\" style={{ marginTop: \"15px\" }} onClick={handleDownload}>Download</button>\r\n//                         <button className=\"btn btn-danger\" style={{ marginTop: \"15px\", marginLeft: \"7px\" }} onClick={handleRemove}>Close</button>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         </div >\r\n//     );\r\n// }\r\n\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../index.css';\r\n\r\nexport default function Dream() {\r\n    const [Image, setImage] = useState(null);\r\n    const [preview, setPreview] = useState(null);\r\n    const [final, setFinal] = useState(null);\r\n    const [spin, setSpin] = useState(false);\r\n    const [alert, setAlert] = useState(\"\");\r\n    const fileInputRef = useRef(null);\r\n    document.title = \"Creativity - DreamVortex\";\r\n\r\n    const ImageUpload = async () => {\r\n        try {\r\n            setSpin(true);\r\n            if (!Image) {\r\n                setAlert(\"Please Upload the Image\");\r\n                setTimeout(() => setAlert(\"\"), 2000);\r\n                setSpin(false);\r\n                return;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('file', Image);\r\n\r\n            const response = await fetch('http://localhost:5500/dd', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                setImage(null);\r\n                setFinal(result.imageUrl);\r\n                setSpin(false);\r\n                fileInputRef.current.value = '';\r\n                setPreview(null);\r\n            } else {\r\n                setSpin(false);\r\n                console.error('Upload failed:', result.error);\r\n            }\r\n        } catch (error) {\r\n            setSpin(false);\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        setImage(file);\r\n        if (file) {\r\n            const objectUrl = URL.createObjectURL(file);\r\n            setPreview(objectUrl);\r\n        } else {\r\n            setPreview(null);\r\n        }\r\n    };\r\n\r\n    const handleImageDeload = () => {\r\n        setImage(null);\r\n        setSpin(false);\r\n        setPreview(null);\r\n        fileInputRef.current.value = '';\r\n    };\r\n\r\n    const handleRemove = () => {\r\n        setFinal(null);\r\n    };\r\n\r\n    const handleDownload = async () => {\r\n        if (final) {\r\n            try {\r\n                const response = await fetch(`http://localhost:5500${final}`);\r\n                const blob = await response.blob();\r\n                const downloadLink = document.createElement('a');\r\n                downloadLink.href = window.URL.createObjectURL(blob);\r\n                downloadLink.download = 'Styled_Image.jpg';\r\n                downloadLink.click();\r\n            } catch (error) {\r\n                console.error('Download error:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"moving-background\"></div>\r\n            <div className=\"content\">\r\n                {alert && <div className=\"alert alert-danger text-center\">{alert}</div>}\r\n                <h2 className=\"text-center\">Dreamy Creations through Deep Dream Alchemy</h2>\r\n                <p className=\"text-center\">Upload an image below to start your dream journey!</p>\r\n                <div className=\"form-container\">\r\n                    <label htmlFor=\"ContentImage\" className=\"form-label\">ðŸ’¤ Dreaming Image:</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleImageUpload}\r\n                        ref={fileInputRef}\r\n                        accept=\"image/*\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    {preview && (\r\n                        <div className=\"image-preview\">\r\n                            <img src={preview} alt=\"Preview\" />\r\n                            <button className=\"btn btn-danger mt-2\" onClick={handleImageDeload}>Delete</button>\r\n                        </div>\r\n                    )}\r\n                    {!spin && !final && <button className=\"btn btn-success mt-2\" onClick={ImageUpload}>Upload</button>}\r\n                    {!alert && spin && <div className=\"spinner-border text-success mt-2\" role=\"status\"></div>}\r\n                </div>\r\n                {final && (\r\n                    <div className=\"text-center mt-4\">\r\n                        <h3>Stylized Image</h3>\r\n                        <img src={`http://localhost:5500${final}`} alt=\"Stylized\" className=\"stylized-image\" />\r\n                        <button className=\"btn btn-success mt-2\" onClick={handleDownload}>Download</button>\r\n                        <button className=\"btn btn-danger mt-2 ml-2\" onClick={handleRemove}>Close</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}