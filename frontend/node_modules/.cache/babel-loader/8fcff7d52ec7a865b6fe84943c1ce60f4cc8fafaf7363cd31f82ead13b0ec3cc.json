{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G Uday Chandra\\\\PycharmProjects\\\\1\\\\java programs\\\\React\\\\DeepDream\\\\frontend\\\\src\\\\Components\\\\Dalle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dalle() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Here, you can perform actions with the inputText state, like sending it to a backend API, processing it, etc.\n    console.log('Input Text:', inputText);\n    setInputText(''); // Clear the input after submission, if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      marginTop: \"70px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dalle Text Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the Dalle Text Input page! Enter some text in the input field below and click the submit button to perform actions with the text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"textInput\",\n        children: \"Enter Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"textInput\",\n        value: inputText,\n        onChange: handleInputChange,\n        placeholder: \"Type your text here\",\n        style: {\n          width: '100%',\n          padding: '10px',\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), inputText && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Input Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Dalle, \"wAh2Cv8Kk70PfbjrJimBRYwxb6g=\");\n_c = Dalle;\nvar _c;\n$RefreshReg$(_c, \"Dalle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dalle","_s","inputText","setInputText","handleInputChange","event","target","value","handleSubmit","preventDefault","console","log","className","style","padding","maxWidth","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","width","_c","$RefreshReg$"],"sources":["C:/Users/G Uday Chandra/PycharmProjects/1/java programs/React/DeepDream/frontend/src/Components/Dalle.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Dalle() {\r\n    const [inputText, setInputText] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputText(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Here, you can perform actions with the inputText state, like sending it to a backend API, processing it, etc.\r\n        console.log('Input Text:', inputText);\r\n        setInputText(''); // Clear the input after submission, if needed\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\" style={{ padding: '20px', maxWidth: '600px', marginTop: \"70px\" }}>\r\n            <h1>Dalle Text Input</h1>\r\n            <p>\r\n                Welcome to the Dalle Text Input page! Enter some text in the input field below and click the submit button\r\n                to perform actions with the text.\r\n            </p>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"textInput\">Enter Text:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"textInput\"\r\n                    value={inputText}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Type your text here\"\r\n                    style={{ width: '100%', padding: '10px', marginTop: '10px' }}\r\n                />\r\n                <button type=\"submit\" style={{ marginTop: '10px' }}>Submit</button>\r\n            </form>\r\n            {inputText && (\r\n                <div style={{ marginTop: '20px' }}>\r\n                    <h3>Input Text:</h3>\r\n                    <p>{inputText}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC5BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,SAAS,CAAC;IACrCC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACIJ,OAAA;IAAKa,SAAS,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxFlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MAAAkB,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJtB,OAAA;MAAMuB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBACzBlB,OAAA;QAAOwB,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CtB,OAAA;QACIyB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,WAAW;QACdlB,KAAK,EAAEL,SAAU;QACjBwB,QAAQ,EAAEtB,iBAAkB;QAC5BuB,WAAW,EAAC,qBAAqB;QACjCd,KAAK,EAAE;UAAEe,KAAK,EAAE,MAAM;UAAEd,OAAO,EAAE,MAAM;UAAEE,SAAS,EAAE;QAAO;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACFtB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAACX,KAAK,EAAE;UAAEG,SAAS,EAAE;QAAO,CAAE;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,EACNnB,SAAS,iBACNH,OAAA;MAAKc,KAAK,EAAE;QAAEG,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC9BlB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,EAAIf;MAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpB,EAAA,CAzCuBD,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}